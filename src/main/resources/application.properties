# === General ===
spring.application.name=${SPRING_APPLICATION_NAME:habitos-retos}

# === PostgreSQL ===
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5434/habitosdb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}

# === JPA ===
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_DIALECT:org.hibernate.dialect.PostgreSQLDialect}

# === JWT ===
jwt.secret=${JWT_SECRET_KEY:mi_clave_super_secreta_para_firmar_tokens_123456}
jwt.expiration=${JWT_KEY_TIME_EXP:3600000} # Optional: default 1h

# === Kafka ===
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.properties.security.protocol=PLAINTEXT

spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:habitos-retos-group}
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO_OFFSET_RESET:earliest}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# === CORS ===
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:4200}

# === Misc ===
spring.main.allow-bean-definition-overriding=true
logging.level.org.apache.kafka=DEBUG
